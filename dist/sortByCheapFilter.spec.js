"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const test_1 = __importDefault(require("./test"));
const search_by_parameters_fixture_1 = require("../fixture/search.by.parameters.fixture");
const test_2 = require("@playwright/test");
const logger_utils_1 = __importDefault(require("../utils/logger.utils"));
(0, test_1.default)('Sorting by cheap filter', async ({ app, page, browser }) => {
    logger_utils_1.default.step("Открываем страницу");
    await app.base.openAvBy();
    logger_utils_1.default.step("Нажимаем на поле 'Марка'");
    await app.searchByParameters.clickOnMarkButton();
    logger_utils_1.default.step("Вводим значение", search_by_parameters_fixture_1.Marks.BMW);
    await app.searchByParameters.inputMarkName(search_by_parameters_fixture_1.Marks.BMW);
    logger_utils_1.default.step("Ожидаем...");
    await app.searchByParameters.waiter();
    logger_utils_1.default.step("Нажимаем на Энтер");
    await app.searchByParameters.clickEnter();
    logger_utils_1.default.step("Ожидаем...");
    await app.searchByParameters.waiter();
    logger_utils_1.default.step("Нажимаем на поле 'Модель'");
    await app.searchByParameters.clickOnModelButton();
    logger_utils_1.default.step("Выбираем модель", search_by_parameters_fixture_1.BMWModels.X5);
    await app.searchByParameters.chooseModel(search_by_parameters_fixture_1.BMWModels.X5);
    logger_utils_1.default.step("Ожидаем...");
    await app.searchByParameters.waiter();
    logger_utils_1.default.step("Нажимаем на кнопку 'Показать *** объявлений'");
    await app.searchByParameters.clickOnShowResultButton();
    logger_utils_1.default.step("Нажимаем на кнопку выбора типа сортировки");
    await app.searchByParameters.clickOnSortingField();
    logger_utils_1.default.step("Нажимаем на 'дешёвые'");
    await app.searchByParameters.chooseSortingType(search_by_parameters_fixture_1.SortingTypes.Cheap);
    logger_utils_1.default.step("Ожидаем...");
    await app.searchByParameters.waiter();
    logger_utils_1.default.step("Получаем минимальную цену из массива цен");
    const a = await app.result.getMinPrice({ page, browser });
    logger_utils_1.default.step("Получаем цену первого автомобиля после сортировки");
    const b = await app.result.getTheFirstMinimumPriceInResults({ page, browser });
    logger_utils_1.default.step("Делаем проверку...");
    (0, test_2.expect)(a).toBe(b);
});
